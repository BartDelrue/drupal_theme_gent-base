// mixins

// Horizontal padding based on the context grid gutter in em
// Use: @include em-padding-lr(#left, #right);

@mixin em-padding-lr($pl: 1, $pr: 1) {
  // sass-lint:disable-block no-duplicate-properties
  @if $pl > 0 {
    padding-left: $alpha-line-height * 1em * $pl;
  }

  @if $pr > 0 {
    padding-right: $alpha-line-height * 1em * $pr;
  }

}

@mixin rem-padding-lr($pl: 1, $pr: 1) {
  // sass-lint:disable-block no-duplicate-properties
  @if $pl > 0 {
    padding-left: $pl * $alpha-font-size * 1px;
    padding-left: $pl * 1rem;
  }

  @if $pr > 0 {
    padding-right: $pr * $alpha-font-size * 1px;
    padding-right: $pr * 1rem;
  }

}

@mixin rem-margin-lr($ml: 1, $mr: 1) {
  // sass-lint:disable-block no-duplicate-properties
  @if $ml != 0 {
    margin-left: $ml * $alpha-font-size * 1px;
    margin-left: $ml * 1rem;
  }
  @if $mr != 0 {
    margin-right: $mr * $alpha-font-size * 1px;
    margin-right: $mr * 1rem;
  }
}

// Horizontal padding based on the context grid gutter
// Use: @include px-padding-lr(#left, #right);
@mixin px-padding-lr($left: 1, $right: 1) {
  // sass-lint:disable-block no-duplicate-properties
  @if $left > 0 {
    padding-left: $grid-margin * $left * 1px;
  }
  @if $right > 0 {
    padding-right: $grid-margin * $right * 1px;
  }
}

// Horizontal margin based on the context grid gutter in em
// Use: @include em-margin-lr(#left, #right);
@mixin em-margin-lr($left: 1, $right: $left) {
  // sass-lint:disable-block no-duplicate-properties
  @if $left > 0 {
    margin-left: $grid-margin / $alpha-font-size * $left * 1em;
  }
  @if $right > 0 {
    margin-right: $grid-margin / $alpha-font-size * $right * 1em;
  }
}

// Horizontal margin based on the context grid gutter
// Use: @include px-margin-lr(#left, #right);
@mixin px-margin-lr($left: 1, $right: 1) {
  // sass-lint:disable-block no-duplicate-properties
  @if $left != 0 {
    margin-left: $grid-margin * $left * 1px;
  }
  @if $right != 0 {
    margin-right: $grid-margin * $right * 1px;
  }
}

// Horizontal percentual margin
// Use: @include perc-margin-lr(#left, #right);
@mixin perc-margin-lr($left: 1, $right: $left) {
  margin-left: $fluid-grid-margin * $left * 1%;
  margin-right: $fluid-grid-margin * $right * 1%;
}

// Fully percentual collumns and gutters
// Use: @include perc-col-(#amount, #gutterleft, #gutterright)
@mixin perc-col-($amount, $pl, $pr) {
  @include perc-margin-lr($pl, $pr);

  float: left;
  width: ($fluid-grid-column * $amount) + ($fluid-grid-margin * (($amount * 2) - 2)) + 0%;
}

// border-box box sizing
// Use: @include box-(#amount, #gutterleft, #gutterright);
@mixin box-($amount, $left, $right) {
  @include rem-padding-lr($left, $right); // experimental
  float: left;
  position: relative;
  width: ($fluid-grid-column * $amount) + ($fluid-grid-gutter * $amount) + 0%;
}

// Push #amount of columns left
// Use @include push-(#amount);
@mixin push-left($amount) {
  left: ($fluid-grid-column * $amount) + ($fluid-grid-gutter * $amount) + 0%;
}

@mixin pull-right($amount) {
  right: ($fluid-grid-column * $amount) + ($fluid-grid-gutter * $amount) + 0%;
}

@mixin pull-left($amount) {
  left: (($fluid-grid-column * $amount) + ($fluid-grid-gutter * $amount) + 0%) * -1;
}

// last-col mixin to re-align the right edge
// use: @extend .last-col;
@mixin last-col {
  float: right;
}
